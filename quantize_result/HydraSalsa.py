# GENETARED BY NNDCT, DO NOT EDIT!

import torch
from torch import tensor
import pytorch_nndct as py_nndct

class HydraSalsa(py_nndct.nn.NndctQuantModel):
    def __init__(self):
        super(HydraSalsa, self).__init__()
        self.module_0 = py_nndct.nn.Input() #HydraSalsa::input_0(HydraSalsa::nndct_input_0)
        self.module_1 = py_nndct.nn.Conv2d(in_channels=5, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx]/Conv2d[conv1]/ret.3(HydraSalsa::nndct_conv2d_1)
        self.module_2 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx]/ReLU[act1]/ret.5(HydraSalsa::nndct_relu_2)
        self.module_3 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx]/Conv2d[conv2]/ret.7(HydraSalsa::nndct_conv2d_3)
        self.module_4 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx]/ReLU[act2]/ret.11(HydraSalsa::nndct_relu_4)
        self.module_5 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx]/Conv2d[conv3]/ret.13(HydraSalsa::nndct_conv2d_5)
        self.module_6 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx]/ReLU[act3]/ret.17(HydraSalsa::nndct_relu_6)
        self.module_7 = py_nndct.nn.Add() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx]/ret.19(HydraSalsa::nndct_elemwise_add_7)
        self.module_8 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx2]/Conv2d[conv1]/ret.21(HydraSalsa::nndct_conv2d_8)
        self.module_9 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx2]/ReLU[act1]/ret.23(HydraSalsa::nndct_relu_9)
        self.module_10 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx2]/Conv2d[conv2]/ret.25(HydraSalsa::nndct_conv2d_10)
        self.module_11 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx2]/ReLU[act2]/ret.29(HydraSalsa::nndct_relu_11)
        self.module_12 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx2]/Conv2d[conv3]/ret.31(HydraSalsa::nndct_conv2d_12)
        self.module_13 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx2]/ReLU[act3]/ret.35(HydraSalsa::nndct_relu_13)
        self.module_14 = py_nndct.nn.Add() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx2]/ret.37(HydraSalsa::nndct_elemwise_add_14)
        self.module_15 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx3]/Conv2d[conv1]/ret.39(HydraSalsa::nndct_conv2d_15)
        self.module_16 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx3]/ReLU[act1]/ret.41(HydraSalsa::nndct_relu_16)
        self.module_17 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx3]/Conv2d[conv2]/ret.43(HydraSalsa::nndct_conv2d_17)
        self.module_18 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx3]/ReLU[act2]/ret.47(HydraSalsa::nndct_relu_18)
        self.module_19 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx3]/Conv2d[conv3]/ret.49(HydraSalsa::nndct_conv2d_19)
        self.module_20 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx3]/ReLU[act3]/ret.53(HydraSalsa::nndct_relu_20)
        self.module_21 = py_nndct.nn.Add() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResContextBlock[downCntx3]/ret.55(HydraSalsa::nndct_elemwise_add_21)
        self.module_22 = py_nndct.nn.Conv2d(in_channels=32, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/Conv2d[conv1]/ret.57(HydraSalsa::nndct_conv2d_22)
        self.module_23 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/ReLU[act1]/ret.59(HydraSalsa::nndct_relu_23)
        self.module_24 = py_nndct.nn.Conv2d(in_channels=32, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/Conv2d[conv2]/ret.61(HydraSalsa::nndct_conv2d_24)
        self.module_25 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/ReLU[act2]/ret.65(HydraSalsa::nndct_relu_25)
        self.module_26 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/Conv2d[conv3]/ret.67(HydraSalsa::nndct_conv2d_26)
        self.module_27 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/ReLU[act3]/ret.71(HydraSalsa::nndct_relu_27)
        self.module_28 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/Conv2d[conv4]/ret.73(HydraSalsa::nndct_conv2d_28)
        self.module_29 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/ReLU[act4]/ret.77(HydraSalsa::nndct_relu_29)
        self.module_30 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/ret.79(HydraSalsa::nndct_concat_30)
        self.module_31 = py_nndct.nn.Conv2d(in_channels=192, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/Conv2d[conv5]/ret.81(HydraSalsa::nndct_conv2d_31)
        self.module_32 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/ReLU[act5]/ret.85(HydraSalsa::nndct_relu_32)
        self.module_33 = py_nndct.nn.Add() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/ret.87(HydraSalsa::nndct_elemwise_add_33)
        self.module_34 = py_nndct.nn.AvgPool2d(kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], ceil_mode=False, count_include_pad=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock1]/AvgPool2d[pool]/16243(HydraSalsa::nndct_avgpool_34)
        self.module_35 = py_nndct.nn.Conv2d(in_channels=64, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/Conv2d[conv1]/ret.89(HydraSalsa::nndct_conv2d_35)
        self.module_36 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/ReLU[act1]/ret.91(HydraSalsa::nndct_relu_36)
        self.module_37 = py_nndct.nn.Conv2d(in_channels=64, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/Conv2d[conv2]/ret.93(HydraSalsa::nndct_conv2d_37)
        self.module_38 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/ReLU[act2]/ret.97(HydraSalsa::nndct_relu_38)
        self.module_39 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/Conv2d[conv3]/ret.99(HydraSalsa::nndct_conv2d_39)
        self.module_40 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/ReLU[act3]/ret.103(HydraSalsa::nndct_relu_40)
        self.module_41 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/Conv2d[conv4]/ret.105(HydraSalsa::nndct_conv2d_41)
        self.module_42 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/ReLU[act4]/ret.109(HydraSalsa::nndct_relu_42)
        self.module_43 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/ret.111(HydraSalsa::nndct_concat_43)
        self.module_44 = py_nndct.nn.Conv2d(in_channels=384, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/Conv2d[conv5]/ret.113(HydraSalsa::nndct_conv2d_44)
        self.module_45 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/ReLU[act5]/ret.117(HydraSalsa::nndct_relu_45)
        self.module_46 = py_nndct.nn.Add() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/ret.119(HydraSalsa::nndct_elemwise_add_46)
        self.module_47 = py_nndct.nn.AvgPool2d(kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], ceil_mode=False, count_include_pad=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock2]/AvgPool2d[pool]/16405(HydraSalsa::nndct_avgpool_47)
        self.module_48 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/Conv2d[conv1]/ret.121(HydraSalsa::nndct_conv2d_48)
        self.module_49 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/ReLU[act1]/ret.123(HydraSalsa::nndct_relu_49)
        self.module_50 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/Conv2d[conv2]/ret.125(HydraSalsa::nndct_conv2d_50)
        self.module_51 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/ReLU[act2]/ret.129(HydraSalsa::nndct_relu_51)
        self.module_52 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/Conv2d[conv3]/ret.131(HydraSalsa::nndct_conv2d_52)
        self.module_53 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/ReLU[act3]/ret.135(HydraSalsa::nndct_relu_53)
        self.module_54 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/Conv2d[conv4]/ret.137(HydraSalsa::nndct_conv2d_54)
        self.module_55 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/ReLU[act4]/ret.141(HydraSalsa::nndct_relu_55)
        self.module_56 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/ret.143(HydraSalsa::nndct_concat_56)
        self.module_57 = py_nndct.nn.Conv2d(in_channels=768, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/Conv2d[conv5]/ret.145(HydraSalsa::nndct_conv2d_57)
        self.module_58 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/ReLU[act5]/ret.149(HydraSalsa::nndct_relu_58)
        self.module_59 = py_nndct.nn.Add() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/ret.151(HydraSalsa::nndct_elemwise_add_59)
        self.module_60 = py_nndct.nn.AvgPool2d(kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], ceil_mode=False, count_include_pad=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock3]/AvgPool2d[pool]/16568(HydraSalsa::nndct_avgpool_60)
        self.module_61 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/Conv2d[conv1]/ret.153(HydraSalsa::nndct_conv2d_61)
        self.module_62 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/ReLU[act1]/ret.155(HydraSalsa::nndct_relu_62)
        self.module_63 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/Conv2d[conv2]/ret.157(HydraSalsa::nndct_conv2d_63)
        self.module_64 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/ReLU[act2]/ret.161(HydraSalsa::nndct_relu_64)
        self.module_65 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/Conv2d[conv3]/ret.163(HydraSalsa::nndct_conv2d_65)
        self.module_66 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/ReLU[act3]/ret.167(HydraSalsa::nndct_relu_66)
        self.module_67 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/Conv2d[conv4]/ret.169(HydraSalsa::nndct_conv2d_67)
        self.module_68 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/ReLU[act4]/ret.173(HydraSalsa::nndct_relu_68)
        self.module_69 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/ret.175(HydraSalsa::nndct_concat_69)
        self.module_70 = py_nndct.nn.Conv2d(in_channels=768, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/Conv2d[conv5]/ret.177(HydraSalsa::nndct_conv2d_70)
        self.module_71 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/ReLU[act5]/ret.181(HydraSalsa::nndct_relu_71)
        self.module_72 = py_nndct.nn.Add() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/ret.183(HydraSalsa::nndct_elemwise_add_72)
        self.module_73 = py_nndct.nn.AvgPool2d(kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], ceil_mode=False, count_include_pad=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock4]/AvgPool2d[pool]/16731(HydraSalsa::nndct_avgpool_73)
        self.module_74 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/Conv2d[conv1]/ret.185(HydraSalsa::nndct_conv2d_74)
        self.module_75 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/ReLU[act1]/ret.187(HydraSalsa::nndct_relu_75)
        self.module_76 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/Conv2d[conv2]/ret.189(HydraSalsa::nndct_conv2d_76)
        self.module_77 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/ReLU[act2]/ret.193(HydraSalsa::nndct_relu_77)
        self.module_78 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/Conv2d[conv3]/ret.195(HydraSalsa::nndct_conv2d_78)
        self.module_79 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/ReLU[act3]/ret.199(HydraSalsa::nndct_relu_79)
        self.module_80 = py_nndct.nn.Conv2d(in_channels=256, out_channels=256, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/Conv2d[conv4]/ret.201(HydraSalsa::nndct_conv2d_80)
        self.module_81 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/ReLU[act4]/ret.205(HydraSalsa::nndct_relu_81)
        self.module_82 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/ret.207(HydraSalsa::nndct_concat_82)
        self.module_83 = py_nndct.nn.Conv2d(in_channels=768, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/Conv2d[conv5]/ret.209(HydraSalsa::nndct_conv2d_83)
        self.module_84 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/ReLU[act5]/ret.213(HydraSalsa::nndct_relu_84)
        self.module_85 = py_nndct.nn.Add() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaEncoder[encoder]/ResBlock[resBlock5]/ret.215(HydraSalsa::nndct_elemwise_add_85)
        self.module_86 = py_nndct.nn.Interpolate() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/Upsample[up]/ret.217(HydraSalsa::nndct_resize_86)
        self.module_87 = py_nndct.nn.Conv2d(in_channels=256, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/Conv2d[convup]/ret.219(HydraSalsa::nndct_conv2d_87)
        self.module_88 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/ReLU[actup]/ret.223(HydraSalsa::nndct_relu_88)
        self.module_89 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/ret.225(HydraSalsa::nndct_concat_89)
        self.module_90 = py_nndct.nn.Conv2d(in_channels=320, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/Conv2d[conv1]/ret.227(HydraSalsa::nndct_conv2d_90)
        self.module_91 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/ReLU[act1]/ret.231(HydraSalsa::nndct_relu_91)
        self.module_92 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/Conv2d[conv2]/ret.233(HydraSalsa::nndct_conv2d_92)
        self.module_93 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/ReLU[act2]/ret.237(HydraSalsa::nndct_relu_93)
        self.module_94 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/Conv2d[conv3]/ret.239(HydraSalsa::nndct_conv2d_94)
        self.module_95 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/ReLU[act3]/ret.243(HydraSalsa::nndct_relu_95)
        self.module_96 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/ret.245(HydraSalsa::nndct_concat_96)
        self.module_97 = py_nndct.nn.Conv2d(in_channels=384, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/Conv2d[conv4]/ret.247(HydraSalsa::nndct_conv2d_97)
        self.module_98 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock1]/ReLU[act4]/ret.251(HydraSalsa::nndct_relu_98)
        self.module_99 = py_nndct.nn.Interpolate() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/Upsample[up]/ret.253(HydraSalsa::nndct_resize_99)
        self.module_100 = py_nndct.nn.Conv2d(in_channels=128, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/Conv2d[convup]/ret.255(HydraSalsa::nndct_conv2d_100)
        self.module_101 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/ReLU[actup]/ret.259(HydraSalsa::nndct_relu_101)
        self.module_102 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/ret.261(HydraSalsa::nndct_concat_102)
        self.module_103 = py_nndct.nn.Conv2d(in_channels=288, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/Conv2d[conv1]/ret.263(HydraSalsa::nndct_conv2d_103)
        self.module_104 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/ReLU[act1]/ret.267(HydraSalsa::nndct_relu_104)
        self.module_105 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/Conv2d[conv2]/ret.269(HydraSalsa::nndct_conv2d_105)
        self.module_106 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/ReLU[act2]/ret.273(HydraSalsa::nndct_relu_106)
        self.module_107 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/Conv2d[conv3]/ret.275(HydraSalsa::nndct_conv2d_107)
        self.module_108 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/ReLU[act3]/ret.279(HydraSalsa::nndct_relu_108)
        self.module_109 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/ret.281(HydraSalsa::nndct_concat_109)
        self.module_110 = py_nndct.nn.Conv2d(in_channels=384, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/Conv2d[conv4]/ret.283(HydraSalsa::nndct_conv2d_110)
        self.module_111 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock2]/ReLU[act4]/ret.287(HydraSalsa::nndct_relu_111)
        self.module_112 = py_nndct.nn.Interpolate() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/Upsample[up]/ret.289(HydraSalsa::nndct_resize_112)
        self.module_113 = py_nndct.nn.Conv2d(in_channels=128, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/Conv2d[convup]/ret.291(HydraSalsa::nndct_conv2d_113)
        self.module_114 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/ReLU[actup]/ret.295(HydraSalsa::nndct_relu_114)
        self.module_115 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/ret.297(HydraSalsa::nndct_concat_115)
        self.module_116 = py_nndct.nn.Conv2d(in_channels=160, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/Conv2d[conv1]/ret.299(HydraSalsa::nndct_conv2d_116)
        self.module_117 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/ReLU[act1]/ret.303(HydraSalsa::nndct_relu_117)
        self.module_118 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/Conv2d[conv2]/ret.305(HydraSalsa::nndct_conv2d_118)
        self.module_119 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/ReLU[act2]/ret.309(HydraSalsa::nndct_relu_119)
        self.module_120 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/Conv2d[conv3]/ret.311(HydraSalsa::nndct_conv2d_120)
        self.module_121 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/ReLU[act3]/ret.315(HydraSalsa::nndct_relu_121)
        self.module_122 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/ret.317(HydraSalsa::nndct_concat_122)
        self.module_123 = py_nndct.nn.Conv2d(in_channels=192, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/Conv2d[conv4]/ret.319(HydraSalsa::nndct_conv2d_123)
        self.module_124 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock3]/ReLU[act4]/ret.323(HydraSalsa::nndct_relu_124)
        self.module_125 = py_nndct.nn.Interpolate() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/Upsample[up]/ret.325(HydraSalsa::nndct_resize_125)
        self.module_126 = py_nndct.nn.Conv2d(in_channels=64, out_channels=16, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/Conv2d[convup]/ret.327(HydraSalsa::nndct_conv2d_126)
        self.module_127 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/ReLU[actup]/ret.331(HydraSalsa::nndct_relu_127)
        self.module_128 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/ret.333(HydraSalsa::nndct_concat_128)
        self.module_129 = py_nndct.nn.Conv2d(in_channels=80, out_channels=32, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/Conv2d[conv1]/ret.335(HydraSalsa::nndct_conv2d_129)
        self.module_130 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/ReLU[act1]/ret.339(HydraSalsa::nndct_relu_130)
        self.module_131 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/Conv2d[conv2]/ret.341(HydraSalsa::nndct_conv2d_131)
        self.module_132 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/ReLU[act2]/ret.345(HydraSalsa::nndct_relu_132)
        self.module_133 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/Conv2d[conv3]/ret.347(HydraSalsa::nndct_conv2d_133)
        self.module_134 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/ReLU[act3]/ret.351(HydraSalsa::nndct_relu_134)
        self.module_135 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/ret.353(HydraSalsa::nndct_concat_135)
        self.module_136 = py_nndct.nn.Conv2d(in_channels=96, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/Conv2d[conv4]/ret.355(HydraSalsa::nndct_conv2d_136)
        self.module_137 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/UpBlock[upBlock4]/ReLU[act4]/ret.359(HydraSalsa::nndct_relu_137)
        self.module_138 = py_nndct.nn.Conv2d(in_channels=32, out_channels=20, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder1]/Conv2d[logits]/ret.361(HydraSalsa::nndct_conv2d_138)
        self.module_139 = py_nndct.nn.Interpolate() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/Upsample[up]/ret.363(HydraSalsa::nndct_resize_139)
        self.module_140 = py_nndct.nn.Conv2d(in_channels=256, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/Conv2d[convup]/ret.365(HydraSalsa::nndct_conv2d_140)
        self.module_141 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/ReLU[actup]/ret.369(HydraSalsa::nndct_relu_141)
        self.module_142 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/ret.371(HydraSalsa::nndct_concat_142)
        self.module_143 = py_nndct.nn.Conv2d(in_channels=320, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/Conv2d[conv1]/ret.373(HydraSalsa::nndct_conv2d_143)
        self.module_144 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/ReLU[act1]/ret.377(HydraSalsa::nndct_relu_144)
        self.module_145 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/Conv2d[conv2]/ret.379(HydraSalsa::nndct_conv2d_145)
        self.module_146 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/ReLU[act2]/ret.383(HydraSalsa::nndct_relu_146)
        self.module_147 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/Conv2d[conv3]/ret.385(HydraSalsa::nndct_conv2d_147)
        self.module_148 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/ReLU[act3]/ret.389(HydraSalsa::nndct_relu_148)
        self.module_149 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/ret.391(HydraSalsa::nndct_concat_149)
        self.module_150 = py_nndct.nn.Conv2d(in_channels=384, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/Conv2d[conv4]/ret.393(HydraSalsa::nndct_conv2d_150)
        self.module_151 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock1]/ReLU[act4]/ret.397(HydraSalsa::nndct_relu_151)
        self.module_152 = py_nndct.nn.Interpolate() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/Upsample[up]/ret.399(HydraSalsa::nndct_resize_152)
        self.module_153 = py_nndct.nn.Conv2d(in_channels=128, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/Conv2d[convup]/ret.401(HydraSalsa::nndct_conv2d_153)
        self.module_154 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/ReLU[actup]/ret.405(HydraSalsa::nndct_relu_154)
        self.module_155 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/ret.407(HydraSalsa::nndct_concat_155)
        self.module_156 = py_nndct.nn.Conv2d(in_channels=288, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/Conv2d[conv1]/ret.409(HydraSalsa::nndct_conv2d_156)
        self.module_157 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/ReLU[act1]/ret.413(HydraSalsa::nndct_relu_157)
        self.module_158 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/Conv2d[conv2]/ret.415(HydraSalsa::nndct_conv2d_158)
        self.module_159 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/ReLU[act2]/ret.419(HydraSalsa::nndct_relu_159)
        self.module_160 = py_nndct.nn.Conv2d(in_channels=128, out_channels=128, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/Conv2d[conv3]/ret.421(HydraSalsa::nndct_conv2d_160)
        self.module_161 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/ReLU[act3]/ret.425(HydraSalsa::nndct_relu_161)
        self.module_162 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/ret.427(HydraSalsa::nndct_concat_162)
        self.module_163 = py_nndct.nn.Conv2d(in_channels=384, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/Conv2d[conv4]/ret.429(HydraSalsa::nndct_conv2d_163)
        self.module_164 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock2]/ReLU[act4]/ret.433(HydraSalsa::nndct_relu_164)
        self.module_165 = py_nndct.nn.Interpolate() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/Upsample[up]/ret.435(HydraSalsa::nndct_resize_165)
        self.module_166 = py_nndct.nn.Conv2d(in_channels=128, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/Conv2d[convup]/ret.437(HydraSalsa::nndct_conv2d_166)
        self.module_167 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/ReLU[actup]/ret.441(HydraSalsa::nndct_relu_167)
        self.module_168 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/ret.443(HydraSalsa::nndct_concat_168)
        self.module_169 = py_nndct.nn.Conv2d(in_channels=160, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/Conv2d[conv1]/ret.445(HydraSalsa::nndct_conv2d_169)
        self.module_170 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/ReLU[act1]/ret.449(HydraSalsa::nndct_relu_170)
        self.module_171 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/Conv2d[conv2]/ret.451(HydraSalsa::nndct_conv2d_171)
        self.module_172 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/ReLU[act2]/ret.455(HydraSalsa::nndct_relu_172)
        self.module_173 = py_nndct.nn.Conv2d(in_channels=64, out_channels=64, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/Conv2d[conv3]/ret.457(HydraSalsa::nndct_conv2d_173)
        self.module_174 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/ReLU[act3]/ret.461(HydraSalsa::nndct_relu_174)
        self.module_175 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/ret.463(HydraSalsa::nndct_concat_175)
        self.module_176 = py_nndct.nn.Conv2d(in_channels=192, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/Conv2d[conv4]/ret.465(HydraSalsa::nndct_conv2d_176)
        self.module_177 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock3]/ReLU[act4]/ret.469(HydraSalsa::nndct_relu_177)
        self.module_178 = py_nndct.nn.Interpolate() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/Upsample[up]/ret.471(HydraSalsa::nndct_resize_178)
        self.module_179 = py_nndct.nn.Conv2d(in_channels=64, out_channels=16, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/Conv2d[convup]/ret.473(HydraSalsa::nndct_conv2d_179)
        self.module_180 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/ReLU[actup]/ret.477(HydraSalsa::nndct_relu_180)
        self.module_181 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/ret.479(HydraSalsa::nndct_concat_181)
        self.module_182 = py_nndct.nn.Conv2d(in_channels=80, out_channels=32, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/Conv2d[conv1]/ret.481(HydraSalsa::nndct_conv2d_182)
        self.module_183 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/ReLU[act1]/ret.485(HydraSalsa::nndct_relu_183)
        self.module_184 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[3, 3], stride=[1, 1], padding=[2, 2], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/Conv2d[conv2]/ret.487(HydraSalsa::nndct_conv2d_184)
        self.module_185 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/ReLU[act2]/ret.491(HydraSalsa::nndct_relu_185)
        self.module_186 = py_nndct.nn.Conv2d(in_channels=32, out_channels=32, kernel_size=[2, 2], stride=[1, 1], padding=[1, 1], dilation=[2, 2], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/Conv2d[conv3]/ret.493(HydraSalsa::nndct_conv2d_186)
        self.module_187 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/ReLU[act3]/ret.497(HydraSalsa::nndct_relu_187)
        self.module_188 = py_nndct.nn.Cat() #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/ret.499(HydraSalsa::nndct_concat_188)
        self.module_189 = py_nndct.nn.Conv2d(in_channels=96, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/Conv2d[conv4]/ret.501(HydraSalsa::nndct_conv2d_189)
        self.module_190 = py_nndct.nn.ReLU(inplace=False) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/UpBlock[upBlock4]/ReLU[act4]/ret.505(HydraSalsa::nndct_relu_190)
        self.module_191 = py_nndct.nn.Conv2d(in_channels=32, out_channels=23, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #HydraSalsa::HydraSalsa/Salsa[salsa]/SalsaDecoder[decoder2]/Conv2d[logits]/ret.507(HydraSalsa::nndct_conv2d_191)
        self.module_192 = py_nndct.nn.Softmax(dim=1) #HydraSalsa::HydraSalsa/ret.509(HydraSalsa::nndct_softmax_192)
        self.module_193 = py_nndct.nn.Softmax(dim=1) #HydraSalsa::HydraSalsa/ret(HydraSalsa::nndct_softmax_193)

    @py_nndct.nn.forward_processor
    def forward(self, *args):
        output_module_0 = self.module_0(input=args[0])
        output_module_0 = self.module_1(output_module_0)
        output_module_0 = self.module_2(output_module_0)
        output_module_3 = self.module_3(output_module_0)
        output_module_3 = self.module_4(output_module_3)
        output_module_3 = self.module_5(output_module_3)
        output_module_3 = self.module_6(output_module_3)
        output_module_7 = self.module_7(input=output_module_0, other=output_module_3, alpha=1)
        output_module_7 = self.module_8(output_module_7)
        output_module_7 = self.module_9(output_module_7)
        output_module_10 = self.module_10(output_module_7)
        output_module_10 = self.module_11(output_module_10)
        output_module_10 = self.module_12(output_module_10)
        output_module_10 = self.module_13(output_module_10)
        output_module_14 = self.module_14(input=output_module_7, other=output_module_10, alpha=1)
        output_module_14 = self.module_15(output_module_14)
        output_module_14 = self.module_16(output_module_14)
        output_module_17 = self.module_17(output_module_14)
        output_module_17 = self.module_18(output_module_17)
        output_module_17 = self.module_19(output_module_17)
        output_module_17 = self.module_20(output_module_17)
        output_module_21 = self.module_21(input=output_module_14, other=output_module_17, alpha=1)
        output_module_22 = self.module_22(output_module_21)
        output_module_22 = self.module_23(output_module_22)
        output_module_24 = self.module_24(output_module_21)
        output_module_24 = self.module_25(output_module_24)
        output_module_26 = self.module_26(output_module_24)
        output_module_26 = self.module_27(output_module_26)
        output_module_28 = self.module_28(output_module_26)
        output_module_28 = self.module_29(output_module_28)
        output_module_30 = self.module_30(dim=1, tensors=[output_module_24,output_module_26,output_module_28])
        output_module_30 = self.module_31(output_module_30)
        output_module_30 = self.module_32(output_module_30)
        output_module_22 = self.module_33(input=output_module_22, other=output_module_30, alpha=1)
        output_module_34 = self.module_34(output_module_22)
        output_module_35 = self.module_35(output_module_34)
        output_module_35 = self.module_36(output_module_35)
        output_module_37 = self.module_37(output_module_34)
        output_module_37 = self.module_38(output_module_37)
        output_module_39 = self.module_39(output_module_37)
        output_module_39 = self.module_40(output_module_39)
        output_module_41 = self.module_41(output_module_39)
        output_module_41 = self.module_42(output_module_41)
        output_module_43 = self.module_43(dim=1, tensors=[output_module_37,output_module_39,output_module_41])
        output_module_43 = self.module_44(output_module_43)
        output_module_43 = self.module_45(output_module_43)
        output_module_35 = self.module_46(input=output_module_35, other=output_module_43, alpha=1)
        output_module_47 = self.module_47(output_module_35)
        output_module_48 = self.module_48(output_module_47)
        output_module_48 = self.module_49(output_module_48)
        output_module_50 = self.module_50(output_module_47)
        output_module_50 = self.module_51(output_module_50)
        output_module_52 = self.module_52(output_module_50)
        output_module_52 = self.module_53(output_module_52)
        output_module_54 = self.module_54(output_module_52)
        output_module_54 = self.module_55(output_module_54)
        output_module_56 = self.module_56(dim=1, tensors=[output_module_50,output_module_52,output_module_54])
        output_module_56 = self.module_57(output_module_56)
        output_module_56 = self.module_58(output_module_56)
        output_module_48 = self.module_59(input=output_module_48, other=output_module_56, alpha=1)
        output_module_60 = self.module_60(output_module_48)
        output_module_61 = self.module_61(output_module_60)
        output_module_61 = self.module_62(output_module_61)
        output_module_63 = self.module_63(output_module_60)
        output_module_63 = self.module_64(output_module_63)
        output_module_65 = self.module_65(output_module_63)
        output_module_65 = self.module_66(output_module_65)
        output_module_67 = self.module_67(output_module_65)
        output_module_67 = self.module_68(output_module_67)
        output_module_69 = self.module_69(dim=1, tensors=[output_module_63,output_module_65,output_module_67])
        output_module_69 = self.module_70(output_module_69)
        output_module_69 = self.module_71(output_module_69)
        output_module_61 = self.module_72(input=output_module_61, other=output_module_69, alpha=1)
        output_module_73 = self.module_73(output_module_61)
        output_module_74 = self.module_74(output_module_73)
        output_module_74 = self.module_75(output_module_74)
        output_module_76 = self.module_76(output_module_73)
        output_module_76 = self.module_77(output_module_76)
        output_module_78 = self.module_78(output_module_76)
        output_module_78 = self.module_79(output_module_78)
        output_module_80 = self.module_80(output_module_78)
        output_module_80 = self.module_81(output_module_80)
        output_module_82 = self.module_82(dim=1, tensors=[output_module_76,output_module_78,output_module_80])
        output_module_82 = self.module_83(output_module_82)
        output_module_82 = self.module_84(output_module_82)
        output_module_74 = self.module_85(input=output_module_74, other=output_module_82, alpha=1)
        output_module_86 = self.module_86(input=output_module_74, size=None, scale_factor=[2.0,2.0], mode='bilinear', align_corners=False)
        output_module_86 = self.module_87(output_module_86)
        output_module_86 = self.module_88(output_module_86)
        output_module_86 = self.module_89(dim=1, tensors=[output_module_86,output_module_61])
        output_module_86 = self.module_90(output_module_86)
        output_module_86 = self.module_91(output_module_86)
        output_module_92 = self.module_92(output_module_86)
        output_module_92 = self.module_93(output_module_92)
        output_module_94 = self.module_94(output_module_92)
        output_module_94 = self.module_95(output_module_94)
        output_module_96 = self.module_96(dim=1, tensors=[output_module_86,output_module_92,output_module_94])
        output_module_96 = self.module_97(output_module_96)
        output_module_96 = self.module_98(output_module_96)
        output_module_96 = self.module_99(input=output_module_96, size=None, scale_factor=[2.0,2.0], mode='bilinear', align_corners=False)
        output_module_96 = self.module_100(output_module_96)
        output_module_96 = self.module_101(output_module_96)
        output_module_96 = self.module_102(dim=1, tensors=[output_module_96,output_module_48])
        output_module_96 = self.module_103(output_module_96)
        output_module_96 = self.module_104(output_module_96)
        output_module_105 = self.module_105(output_module_96)
        output_module_105 = self.module_106(output_module_105)
        output_module_107 = self.module_107(output_module_105)
        output_module_107 = self.module_108(output_module_107)
        output_module_109 = self.module_109(dim=1, tensors=[output_module_96,output_module_105,output_module_107])
        output_module_109 = self.module_110(output_module_109)
        output_module_109 = self.module_111(output_module_109)
        output_module_109 = self.module_112(input=output_module_109, size=None, scale_factor=[2.0,2.0], mode='bilinear', align_corners=False)
        output_module_109 = self.module_113(output_module_109)
        output_module_109 = self.module_114(output_module_109)
        output_module_109 = self.module_115(dim=1, tensors=[output_module_109,output_module_35])
        output_module_109 = self.module_116(output_module_109)
        output_module_109 = self.module_117(output_module_109)
        output_module_118 = self.module_118(output_module_109)
        output_module_118 = self.module_119(output_module_118)
        output_module_120 = self.module_120(output_module_118)
        output_module_120 = self.module_121(output_module_120)
        output_module_122 = self.module_122(dim=1, tensors=[output_module_109,output_module_118,output_module_120])
        output_module_122 = self.module_123(output_module_122)
        output_module_122 = self.module_124(output_module_122)
        output_module_122 = self.module_125(input=output_module_122, size=None, scale_factor=[2.0,2.0], mode='bilinear', align_corners=False)
        output_module_122 = self.module_126(output_module_122)
        output_module_122 = self.module_127(output_module_122)
        output_module_122 = self.module_128(dim=1, tensors=[output_module_122,output_module_22])
        output_module_122 = self.module_129(output_module_122)
        output_module_122 = self.module_130(output_module_122)
        output_module_131 = self.module_131(output_module_122)
        output_module_131 = self.module_132(output_module_131)
        output_module_133 = self.module_133(output_module_131)
        output_module_133 = self.module_134(output_module_133)
        output_module_135 = self.module_135(dim=1, tensors=[output_module_122,output_module_131,output_module_133])
        output_module_135 = self.module_136(output_module_135)
        output_module_135 = self.module_137(output_module_135)
        output_module_135 = self.module_138(output_module_135)
        output_module_139 = self.module_139(input=output_module_74, size=None, scale_factor=[2.0,2.0], mode='bilinear', align_corners=False)
        output_module_139 = self.module_140(output_module_139)
        output_module_139 = self.module_141(output_module_139)
        output_module_139 = self.module_142(dim=1, tensors=[output_module_139,output_module_61])
        output_module_139 = self.module_143(output_module_139)
        output_module_139 = self.module_144(output_module_139)
        output_module_145 = self.module_145(output_module_139)
        output_module_145 = self.module_146(output_module_145)
        output_module_147 = self.module_147(output_module_145)
        output_module_147 = self.module_148(output_module_147)
        output_module_149 = self.module_149(dim=1, tensors=[output_module_139,output_module_145,output_module_147])
        output_module_149 = self.module_150(output_module_149)
        output_module_149 = self.module_151(output_module_149)
        output_module_149 = self.module_152(input=output_module_149, size=None, scale_factor=[2.0,2.0], mode='bilinear', align_corners=False)
        output_module_149 = self.module_153(output_module_149)
        output_module_149 = self.module_154(output_module_149)
        output_module_149 = self.module_155(dim=1, tensors=[output_module_149,output_module_48])
        output_module_149 = self.module_156(output_module_149)
        output_module_149 = self.module_157(output_module_149)
        output_module_158 = self.module_158(output_module_149)
        output_module_158 = self.module_159(output_module_158)
        output_module_160 = self.module_160(output_module_158)
        output_module_160 = self.module_161(output_module_160)
        output_module_162 = self.module_162(dim=1, tensors=[output_module_149,output_module_158,output_module_160])
        output_module_162 = self.module_163(output_module_162)
        output_module_162 = self.module_164(output_module_162)
        output_module_162 = self.module_165(input=output_module_162, size=None, scale_factor=[2.0,2.0], mode='bilinear', align_corners=False)
        output_module_162 = self.module_166(output_module_162)
        output_module_162 = self.module_167(output_module_162)
        output_module_162 = self.module_168(dim=1, tensors=[output_module_162,output_module_35])
        output_module_162 = self.module_169(output_module_162)
        output_module_162 = self.module_170(output_module_162)
        output_module_171 = self.module_171(output_module_162)
        output_module_171 = self.module_172(output_module_171)
        output_module_173 = self.module_173(output_module_171)
        output_module_173 = self.module_174(output_module_173)
        output_module_175 = self.module_175(dim=1, tensors=[output_module_162,output_module_171,output_module_173])
        output_module_175 = self.module_176(output_module_175)
        output_module_175 = self.module_177(output_module_175)
        output_module_175 = self.module_178(input=output_module_175, size=None, scale_factor=[2.0,2.0], mode='bilinear', align_corners=False)
        output_module_175 = self.module_179(output_module_175)
        output_module_175 = self.module_180(output_module_175)
        output_module_175 = self.module_181(dim=1, tensors=[output_module_175,output_module_22])
        output_module_175 = self.module_182(output_module_175)
        output_module_175 = self.module_183(output_module_175)
        output_module_184 = self.module_184(output_module_175)
        output_module_184 = self.module_185(output_module_184)
        output_module_186 = self.module_186(output_module_184)
        output_module_186 = self.module_187(output_module_186)
        output_module_188 = self.module_188(dim=1, tensors=[output_module_175,output_module_184,output_module_186])
        output_module_188 = self.module_189(output_module_188)
        output_module_188 = self.module_190(output_module_188)
        output_module_188 = self.module_191(output_module_188)
        output_module_135 = self.module_192(output_module_135)
        output_module_188 = self.module_193(output_module_188)
        return (output_module_135,output_module_188)
